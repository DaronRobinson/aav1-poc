// Interface automatically generated by schemas-to-ts

import { User } from '../../../../common/schemas-to-ts/User';
import { Media } from '../../../../common/schemas-to-ts/Media';
import { User_Plain } from '../../../../common/schemas-to-ts/User';
import { AdminPanelRelationPropertyModification } from '../../../../common/schemas-to-ts/AdminPanelRelationPropertyModification';

export enum Type {
  Reminder = 'reminder',
  ClientNote = 'clientNote',
  InternalNote = 'internalNote',
  Finding = 'finding',}
export enum Status {
  Pending = 'pending',
  WithRecipient = 'withRecipient',
  Resolved = 'resolved',}

export interface Note {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    user?: { data: User };
    message?: string;
    type?: Type;
    recipientEmail?: string;
    recipientId?: { data: User };
    images?: { data: Media[] };
    status?: Status;
  };
}
export interface Note_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  user?: User_Plain;
  message?: string;
  type?: Type;
  recipientEmail?: string;
  recipientId?: User_Plain;
  images?: Media[];
  status?: Status;
}

export interface Note_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  user?: number;
  message?: string;
  type?: Type;
  recipientEmail?: string;
  recipientId?: number;
  images?: number[];
  status?: Status;
}

export interface Note_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  user?: AdminPanelRelationPropertyModification<User_Plain>;
  message?: string;
  type?: Type;
  recipientEmail?: string;
  recipientId?: AdminPanelRelationPropertyModification<User_Plain>;
  images?: AdminPanelRelationPropertyModification<Media>[];
  status?: Status;
}
